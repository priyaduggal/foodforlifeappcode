{"version":3,"file":"index.d.ts","sources":["index.d.ts"],"names":[],"mappings":"AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { IonicNativePlugin } from '@ionic-native/core';\nexport interface CropOptions {\n    quality?: number;\n    targetHeight?: number;\n    targetWidth?: number;\n}\n/**\n * @name Crop\n * @description Crops images\n * @usage\n * ```typescript\n * import { Crop } from '@ionic-native/crop/ngx';\n *\n * constructor(private crop: Crop) { }\n *\n * ...\n *\n * this.crop.crop('path/to/image.jpg', {quality: 75})\n *   .then(\n *     newImage => console.log('new image path is: ' + newImage),\n *     error => console.error('Error cropping image', error)\n *   );\n * ```\n * @interfaces\n * CropOptions\n */\nexport declare class Crop extends IonicNativePlugin {\n    /**\n     * Crops an image\n     * @param {string} pathToImage\n     * @param {CropOptions} [options]\n     * @returns {Promise<string>} Returns a promise that resolves with the new image path, or rejects if failed to crop.\n     */\n    crop(pathToImage: string, options?: CropOptions): Promise<string>;\n}\n"]}